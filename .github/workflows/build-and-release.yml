name: Build and Release

on:
  push:
    tags:
      - 'v*'  # 当推送以 "v" 开头的 tag 时触发

jobs:
  # Job 1: 构建并推送 Docker 镜像
  docker_build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: 检出仓库代码
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: 设置 Go 环境（假设镜像构建需要）
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      # Step 3: 登录到 Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # Step 4: 使用 Docker Buildx 构建和推送多平台镜像
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: jontyding/informer:latest
          platforms: linux/amd64,linux/arm64

  # Job 2: 编译并发布二进制文件
  binary_release:
    runs-on: ubuntu-latest

    steps:
      # Step 1: 检出仓库代码
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: 设置 Go 环境
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      # Step 3: 下载依赖
      - name: Install dependencies
        run: go mod download

      # Step 4: 编译 Go 二进制文件
      - name: Build Go binary for Linux
        run: make build-linux

      # Step 5: 创建 GitHub Release 并上传二进制文件
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: build/informer-linux-amd64
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
